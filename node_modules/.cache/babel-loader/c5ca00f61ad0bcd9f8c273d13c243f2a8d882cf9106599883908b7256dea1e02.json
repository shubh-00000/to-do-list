{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nimport { useDelayGroupContext, useFloating, offset, shift, flip, arrow, inline, useInteractions, useHover, useFocus, useRole, useDismiss, useDelayGroup } from '@floating-ui/react';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.mjs';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context.mjs';\nfunction useTooltip(settings) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(settings.defaultOpened);\n  const controlled = typeof settings.opened === \"boolean\";\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n  const {\n    delay: groupDelay,\n    currentId,\n    setCurrentId\n  } = useDelayGroupContext();\n  const onChange = useCallback(_opened => {\n    setUncontrolledOpened(_opened);\n    if (_opened) {\n      setCurrentId(uid);\n    }\n  }, [setCurrentId, uid]);\n  const {\n    x,\n    y,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: {\n      arrow: {\n        x: arrowX,\n        y: arrowY\n      } = {}\n    }\n  } = useFloating({\n    strategy: settings.strategy,\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [offset(settings.offset), shift({\n      padding: 8\n    }), flip(), arrow({\n      element: settings.arrowRef,\n      padding: settings.arrowOffset\n    }), ...(settings.inline ? [inline()] : [])]\n  });\n  const {\n    getReferenceProps,\n    getFloatingProps\n  } = useInteractions([useHover(context, {\n    enabled: settings.events?.hover,\n    delay: withinGroup ? groupDelay : {\n      open: settings.openDelay,\n      close: settings.closeDelay\n    },\n    mouseOnly: !settings.events?.touch\n  }), useFocus(context, {\n    enabled: settings.events?.focus,\n    visibleOnly: true\n  }), useRole(context, {\n    role: \"tooltip\"\n  }),\n  // Cannot be used with controlled tooltip, page jumps\n  useDismiss(context, {\n    enabled: typeof settings.opened === \"undefined\"\n  }), useDelayGroup(context, {\n    id: uid\n  })]);\n  useFloatingAutoUpdate({\n    opened,\n    position: settings.position,\n    positionDependencies: settings.positionDependencies,\n    floating: {\n      refs,\n      update\n    }\n  });\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n  const isGroupPhase = opened && currentId && currentId !== uid;\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference: refs.setReference,\n    floating: refs.setFloating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement\n  };\n}\nexport { useTooltip };","map":{"version":3,"names":["useTooltip","settings","uncontrolledOpened","setUncontrolledOpened","useState","defaultOpened","controlled","opened","withinGroup","useTooltipGroupContext","uid","useId","delay","groupDelay","currentId","setCurrentId","useDelayGroupContext","onChange","useCallback","_opened","x","y","context","refs","update","placement","middlewareData","arrow","arrowX","arrowY","useFloating","strategy","position","open","onOpenChange","middleware","offset","shift","padding","flip","element","arrowRef","arrowOffset","inline","getReferenceProps","getFloatingProps","useInteractions","useHover","enabled","events","hover","openDelay","close","closeDelay","mouseOnly","touch","useFocus","focus","visibleOnly","useRole","role","useDismiss","useDelayGroup","id","useFloatingAutoUpdate","positionDependencies","floating","useDidUpdate","onPositionChange","isGroupPhase","reference","setReference","setFloating"],"sources":["C:\\Users\\arora\\OneDrive\\Desktop\\g\\new\\node_modules\\@mantine\\core\\src\\components\\Tooltip\\use-tooltip.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport {\n  arrow,\n  flip,\n  inline,\n  offset,\n  shift,\n  useDelayGroup,\n  useDelayGroupContext,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n  useRole,\n} from '@floating-ui/react';\nimport { useDidUpdate, useId } from '@mantine/hooks';\nimport {\n  FloatingAxesOffsets,\n  FloatingPosition,\n  FloatingStrategy,\n  useFloatingAutoUpdate,\n} from '../Floating';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context';\n\ninterface UseTooltip {\n  position: FloatingPosition;\n  closeDelay?: number;\n  openDelay?: number;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened?: boolean;\n  defaultOpened?: boolean;\n  offset: number | FloatingAxesOffsets;\n  arrowRef?: React.RefObject<HTMLDivElement>;\n  arrowOffset?: number;\n  events?: { hover: boolean; focus: boolean; touch: boolean };\n  positionDependencies: any[];\n  inline?: boolean;\n  strategy?: FloatingStrategy;\n}\n\nexport function useTooltip(settings: UseTooltip) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(settings.defaultOpened);\n  const controlled = typeof settings.opened === 'boolean';\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n\n  const { delay: groupDelay, currentId, setCurrentId } = useDelayGroupContext();\n\n  const onChange = useCallback(\n    (_opened: boolean) => {\n      setUncontrolledOpened(_opened);\n\n      if (_opened) {\n        setCurrentId(uid);\n      }\n    },\n    [setCurrentId, uid]\n  );\n\n  const {\n    x,\n    y,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: { arrow: { x: arrowX, y: arrowY } = {} },\n  } = useFloating({\n    strategy: settings.strategy,\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [\n      offset(settings.offset),\n      shift({ padding: 8 }),\n      flip(),\n      arrow({ element: settings.arrowRef!, padding: settings.arrowOffset }),\n      ...(settings.inline ? [inline()] : []),\n    ],\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: settings.events?.hover,\n      delay: withinGroup ? groupDelay : { open: settings.openDelay, close: settings.closeDelay },\n      mouseOnly: !settings.events?.touch,\n    }),\n    useFocus(context, { enabled: settings.events?.focus, visibleOnly: true }),\n    useRole(context, { role: 'tooltip' }),\n    // Cannot be used with controlled tooltip, page jumps\n    useDismiss(context, { enabled: typeof settings.opened === 'undefined' }),\n    useDelayGroup(context, { id: uid }),\n  ]);\n\n  useFloatingAutoUpdate({\n    opened,\n    position: settings.position,\n    positionDependencies: settings.positionDependencies,\n    floating: { refs, update },\n  });\n\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n\n  const isGroupPhase = opened && currentId && currentId !== uid;\n\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference: refs.setReference,\n    floating: refs.setFloating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}